<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.payProject.system.mapper.UserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.payProject.system.entity.UserRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="DATE" />
    <result column="submitTime" property="submitTime" jdbcType="DATE" />
    <result column="submitSystem" property="submitSystem" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, role, createTime, submitTime, submitSystem, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.payProject.system.entity.UserRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from system_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from system_user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from system_user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.payProject.system.entity.UserRole" useGeneratedKeys="true" keyProperty="id" >
    insert into system_user_role (userId, role, createTime, 
      submitTime, submitSystem, status
      )
    values (#{userId,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, 
      #{submitTime,jdbcType=DATE}, #{submitSystem,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.payProject.system.entity.UserRole" useGeneratedKeys="true" keyProperty="id" >
    insert into system_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="submitTime != null" >
        submitTime,
      </if>
      <if test="submitSystem != null" >
        submitSystem,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="submitTime != null" >
        #{submitTime,jdbcType=DATE},
      </if>
      <if test="submitSystem != null" >
        #{submitSystem,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.payProject.system.entity.UserRoleExample" resultType="java.lang.Integer" >
    select count(*) from system_user_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update system_user_role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        userId = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.submitTime != null" >
        submitTime = #{record.submitTime,jdbcType=DATE},
      </if>
      <if test="record.submitSystem != null" >
        submitSystem = #{record.submitSystem,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update system_user_role
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=DATE},
      submitTime = #{record.submitTime,jdbcType=DATE},
      submitSystem = #{record.submitSystem,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.payProject.system.entity.UserRole" >
    update system_user_role
    <set >
      <if test="userId != null" >
        userId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=DATE},
      </if>
      <if test="submitTime != null" >
        submitTime = #{submitTime,jdbcType=DATE},
      </if>
      <if test="submitSystem != null" >
        submitSystem = #{submitSystem,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.payProject.system.entity.UserRole" >
    update system_user_role
    set userId = #{userId,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=DATE},
      submitTime = #{submitTime,jdbcType=DATE},
      submitSystem = #{submitSystem,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="insertUserRole" parameterType="list">
   insert into system_user_role
      ( userId,
        role,
        createTime,
        submitTime,
        submitSystem,
        status )
        value
     <foreach collection="list"  item="bean" separator=",">
	    <trim prefix="(" suffix=")" suffixOverrides="," >
	      <if test="bean.userId != null" >
	        #{bean.userId,jdbcType=VARCHAR},
	      </if>
	      <if test="bean.role != null" >
	        #{bean.role,jdbcType=INTEGER},
	      </if>
	      <if test="bean.createTime != null" >
	        #{bean.createTime,jdbcType=DATE},
	      </if>
	      <if test="bean.submitTime != null" >
	        #{bean.submitTime,jdbcType=DATE},
	      </if>
	      <if test="bean.submitSystem != null" >
	        #{bean.submitSystem,jdbcType=VARCHAR},
	      </if>
	      <if test="bean.status != null" >
	        #{bean.status,jdbcType=INTEGER},
	      </if>
	    </trim>
  	</foreach>
  </insert>
  <delete id="deleteByUserId" parameterType="java.lang.Integer" >
    delete from system_user_role
    where userId = #{id,jdbcType=INTEGER}
  </delete>
</mapper>
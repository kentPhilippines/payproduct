<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.payProject.manage.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.payProject.manage.entity.AccountEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="accountId" property="accountId" jdbcType="VARCHAR" />
    <result column="accountName" property="accountName" jdbcType="VARCHAR" />
    <result column="accountType" property="accountType" jdbcType="INTEGER" />
    <result column="cashBalance" property="cashBalance" jdbcType="DECIMAL" />
    <result column="freezeBalance" property="freezeBalance" jdbcType="DECIMAL" />
    <result column="accountBalance" property="accountBalance" jdbcType="DECIMAL" />
    <result column="dayDealAmountMax" property="dayDealAmountMax" jdbcType="DECIMAL" />
    <result column="dayDealAmountMin" property="dayDealAmountMin" jdbcType="DECIMAL" />
    <result column="SumDealAmount" property="sumDealAmount" jdbcType="DECIMAL" />
    <result column="SumDealToDayAmount" property="sumDealToDayAmount" jdbcType="DECIMAL" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="submitTime" property="submitTime" jdbcType="TIMESTAMP" />
    <result column="submitSystem" property="submitSystem" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, accountId, accountName, accountType, cashBalance, freezeBalance, accountBalance, 
    dayDealAmountMax, dayDealAmountMin, SumDealAmount, SumDealToDayAmount, createTime, 
    submitTime, submitSystem, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.payProject.manage.entity.AccountEntityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from manage_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from manage_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from manage_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.payProject.manage.entity.AccountEntityExample" >
    delete from manage_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.payProject.manage.entity.AccountEntity" useGeneratedKeys="true" keyProperty="id" >
    insert into manage_account (accountId, accountName, accountType, 
      cashBalance, freezeBalance, accountBalance, 
      dayDealAmountMax, dayDealAmountMin, SumDealAmount, 
      SumDealToDayAmount, createTime, submitTime, 
      submitSystem, status)
    values (#{accountId,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, #{accountType,jdbcType=INTEGER}, 
      #{cashBalance,jdbcType=DECIMAL}, #{freezeBalance,jdbcType=DECIMAL}, #{accountBalance,jdbcType=DECIMAL}, 
      #{dayDealAmountMax,jdbcType=DECIMAL}, #{dayDealAmountMin,jdbcType=DECIMAL}, #{sumDealAmount,jdbcType=DECIMAL}, 
      #{sumDealToDayAmount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{submitTime,jdbcType=TIMESTAMP}, 
      #{submitSystem,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.payProject.manage.entity.AccountEntity" useGeneratedKeys="true" keyProperty="id" >
    insert into manage_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        accountId,
      </if>
      <if test="accountName != null" >
        accountName,
      </if>
      <if test="accountType != null" >
        accountType,
      </if>
      <if test="cashBalance != null" >
        cashBalance,
      </if>
      <if test="freezeBalance != null" >
        freezeBalance,
      </if>
      <if test="accountBalance != null" >
        accountBalance,
      </if>
      <if test="dayDealAmountMax != null" >
        dayDealAmountMax,
      </if>
      <if test="dayDealAmountMin != null" >
        dayDealAmountMin,
      </if>
      <if test="sumDealAmount != null" >
        SumDealAmount,
      </if>
      <if test="sumDealToDayAmount != null" >
        SumDealToDayAmount,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="submitTime != null" >
        submitTime,
      </if>
      <if test="submitSystem != null" >
        submitSystem,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=INTEGER},
      </if>
      <if test="cashBalance != null" >
        #{cashBalance,jdbcType=DECIMAL},
      </if>
      <if test="freezeBalance != null" >
        #{freezeBalance,jdbcType=DECIMAL},
      </if>
      <if test="accountBalance != null" >
        #{accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="dayDealAmountMax != null" >
        #{dayDealAmountMax,jdbcType=DECIMAL},
      </if>
      <if test="dayDealAmountMin != null" >
        #{dayDealAmountMin,jdbcType=DECIMAL},
      </if>
      <if test="sumDealAmount != null" >
        #{sumDealAmount,jdbcType=DECIMAL},
      </if>
      <if test="sumDealToDayAmount != null" >
        #{sumDealToDayAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null" >
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitSystem != null" >
        #{submitSystem,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.payProject.manage.entity.AccountEntityExample" resultType="java.lang.Integer" >
    select count(*) from manage_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update manage_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null" >
        accountId = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null" >
        accountName = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null" >
        accountType = #{record.accountType,jdbcType=INTEGER},
      </if>
      <if test="record.cashBalance != null" >
        cashBalance = #{record.cashBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.freezeBalance != null" >
        freezeBalance = #{record.freezeBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.accountBalance != null" >
        accountBalance = #{record.accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.dayDealAmountMax != null" >
        dayDealAmountMax = #{record.dayDealAmountMax,jdbcType=DECIMAL},
      </if>
      <if test="record.dayDealAmountMin != null" >
        dayDealAmountMin = #{record.dayDealAmountMin,jdbcType=DECIMAL},
      </if>
      <if test="record.sumDealAmount != null" >
        SumDealAmount = #{record.sumDealAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.sumDealToDayAmount != null" >
        SumDealToDayAmount = #{record.sumDealToDayAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.submitTime != null" >
        submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.submitSystem != null" >
        submitSystem = #{record.submitSystem,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update manage_account
    set id = #{record.id,jdbcType=INTEGER},
      accountId = #{record.accountId,jdbcType=VARCHAR},
      accountName = #{record.accountName,jdbcType=VARCHAR},
      accountType = #{record.accountType,jdbcType=INTEGER},
      cashBalance = #{record.cashBalance,jdbcType=DECIMAL},
      freezeBalance = #{record.freezeBalance,jdbcType=DECIMAL},
      accountBalance = #{record.accountBalance,jdbcType=DECIMAL},
      dayDealAmountMax = #{record.dayDealAmountMax,jdbcType=DECIMAL},
      dayDealAmountMin = #{record.dayDealAmountMin,jdbcType=DECIMAL},
      SumDealAmount = #{record.sumDealAmount,jdbcType=DECIMAL},
      SumDealToDayAmount = #{record.sumDealToDayAmount,jdbcType=DECIMAL},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
      submitSystem = #{record.submitSystem,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.payProject.manage.entity.AccountEntity" >
    update manage_account
    <set >
      <if test="accountId != null" >
        accountId = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        accountName = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        accountType = #{accountType,jdbcType=INTEGER},
      </if>
      <if test="cashBalance != null" >
        cashBalance = #{cashBalance,jdbcType=DECIMAL},
      </if>
      <if test="freezeBalance != null" >
        freezeBalance = #{freezeBalance,jdbcType=DECIMAL},
      </if>
      <if test="accountBalance != null" >
        accountBalance = #{accountBalance,jdbcType=DECIMAL},
      </if>
      <if test="dayDealAmountMax != null" >
        dayDealAmountMax = #{dayDealAmountMax,jdbcType=DECIMAL},
      </if>
      <if test="dayDealAmountMin != null" >
        dayDealAmountMin = #{dayDealAmountMin,jdbcType=DECIMAL},
      </if>
      <if test="sumDealAmount != null" >
        SumDealAmount = #{sumDealAmount,jdbcType=DECIMAL},
      </if>
      <if test="sumDealToDayAmount != null" >
        SumDealToDayAmount = #{sumDealToDayAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null" >
        submitTime = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitSystem != null" >
        submitSystem = #{submitSystem,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.payProject.manage.entity.AccountEntity" >
    update manage_account
    set accountId = #{accountId,jdbcType=VARCHAR},
      accountName = #{accountName,jdbcType=VARCHAR},
      accountType = #{accountType,jdbcType=INTEGER},
      cashBalance = #{cashBalance,jdbcType=DECIMAL},
      freezeBalance = #{freezeBalance,jdbcType=DECIMAL},
      accountBalance = #{accountBalance,jdbcType=DECIMAL},
      dayDealAmountMax = #{dayDealAmountMax,jdbcType=DECIMAL},
      dayDealAmountMin = #{dayDealAmountMin,jdbcType=DECIMAL},
      SumDealAmount = #{sumDealAmount,jdbcType=DECIMAL},
      SumDealToDayAmount = #{sumDealToDayAmount,jdbcType=DECIMAL},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      submitTime = #{submitTime,jdbcType=TIMESTAMP},
      submitSystem = #{submitSystem,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>